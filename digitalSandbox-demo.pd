#N canvas 0 22 1276 756 10;
#X msg 95 62 close;
#X msg 77 11 devices;
#X msg 94 35 open 4;
#X text 141 34 <- open the port where your Arduino is connected \,
mine is 4;
#X text 136 10 <- click to list the devices available;
#X obj 96 90 r toArduino;
#X text 170 88 <- route data to comport;
#X text 593 -9 OUTPUTS:;
#X text 911 -39 by Jiffer Harriman;
#X text 910 -25 Creative Commons Open Source;
#X floatatom 316 301 5 0 0 0 - - -;
#X floatatom 356 298 5 0 0 0 - - -;
#X floatatom 397 299 5 0 0 0 - - -;
#N canvas 95 274 651 363 read_analog 0;
#X obj 167 61 inlet;
#X obj 156 319 outlet;
#X obj 229 319 outlet;
#X obj 278 320 outlet;
#X obj 181 232 list prepend;
#X obj 267 233 t l;
#N canvas 163 220 646 477 serial_println 0;
#X obj 60 25 inlet;
#X obj 156 145 t f b;
#X obj 156 209 +;
#X obj 183 170 f;
#X obj 183 192 * 10;
#X msg 198 139 0;
#X obj 156 231 t f f;
#X obj 60 248 f;
#X obj 60 122 t b b;
#X obj 60 270 outlet;
#X text 152 17 to be used with [comport] for utilising Arduino's Serial.println()
function;
#X obj 156 116 - 48;
#X text 186 211 this is taken from the code often used in the Arduino:
;
#X text 208 229 while(Serial.available));
#X text 216 244 byte inByte = Serial.read() \;;
#X text 216 257 if((inByte >= '0') && (inByte <= '9'));
#X text 208 295 (curly brackets are not available in Pd's comments)
;
#X text 235 273 int temp = temp * 10 + inByte - '0' \;;
#X text 214 345 written by Alexandros Drymonitis;
#X obj 111 73 moses 48;
#X obj 156 95 moses 58;
#X text 172 72 let only digits through;
#X obj 60 47 sel 10 13;
#X connect 0 0 22 0;
#X connect 1 0 2 0;
#X connect 1 1 3 0;
#X connect 2 0 6 0;
#X connect 3 0 4 0;
#X connect 4 0 2 1;
#X connect 5 0 3 1;
#X connect 6 0 7 1;
#X connect 6 1 3 1;
#X connect 7 0 9 0;
#X connect 8 0 7 0;
#X connect 8 1 5 0;
#X connect 11 0 1 0;
#X connect 19 1 20 0;
#X connect 20 0 11 0;
#X connect 22 0 8 0;
#X connect 22 2 19 0;
#X restore 167 160 pd serial_println;
#X text 285 160 turn Serial.println characters into integers;
#X text 303 230 pack values into a list that starts right after the
;
#X text 303 245 begin packet character;
#X text 283 278 send each value to its own outlet add an 'f' and an
outlet for each value you are sending between begin/end chars;
#X obj 180 283 unpack f f f f;
#X obj 329 319 outlet;
#N canvas 556 208 852 430 parse-start-stop-Aa 0;
#X msg 179 182 0;
#X msg 152 182 1;
#X msg 238 333 1;
#X obj 238 239 counter;
#X obj 176 387 &&;
#X msg 272 333 0;
#X obj 241 191 gate;
#X obj 205 364 f;
#X obj 171 314 t b b;
#X obj 241 270 > 2;
#X obj 241 308 sel 1 0;
#X obj 209 436 gate;
#X obj 209 478 outlet;
#X text 313 116 65 = 'A' is to start listening;
#X obj 227 60 inlet;
#X obj 342 456 outlet;
#X obj 145 276 f;
#X obj 228 121 t f f f f;
#X text 326 473 send bang when new group is starting;
#X text 58 516 by Jiffer Harriman;
#X text 57 530 Creative Commons Open Source;
#X obj 157 155 sel 65 97;
#X text 313 133 97 = 'a' is to stop;
#X connect 0 0 16 0;
#X connect 0 0 6 0;
#X connect 1 0 16 0;
#X connect 1 0 6 0;
#X connect 2 0 7 1;
#X connect 3 0 9 0;
#X connect 4 0 11 0;
#X connect 5 0 7 1;
#X connect 6 0 3 0;
#X connect 7 0 4 1;
#X connect 8 0 4 0;
#X connect 8 1 7 0;
#X connect 9 0 10 0;
#X connect 10 0 2 0;
#X connect 10 1 5 0;
#X connect 11 0 12 0;
#X connect 14 0 17 0;
#X connect 16 0 4 0;
#X connect 17 0 11 1;
#X connect 17 1 8 0;
#X connect 17 2 6 1;
#X connect 17 3 21 0;
#X connect 21 0 1 0;
#X connect 21 0 15 0;
#X connect 21 1 0 0;
#X connect 21 1 3 2;
#X restore 167 96 pd parse-start-stop-Aa;
#X connect 0 0 13 0;
#X connect 4 0 5 0;
#X connect 4 0 11 0;
#X connect 5 0 4 1;
#X connect 6 0 4 0;
#X connect 11 0 1 0;
#X connect 11 1 2 0;
#X connect 11 2 3 0;
#X connect 11 3 12 0;
#X connect 13 0 6 0;
#X connect 13 1 4 1;
#X restore 318 185 pd read_analog;
#N canvas 95 274 761 439 read_digital 0;
#X obj 167 61 inlet;
#X obj 156 319 outlet;
#X obj 237 331 outlet;
#X obj 181 232 list prepend;
#X obj 267 233 t l;
#N canvas 163 220 646 477 serial_println 0;
#X obj 60 25 inlet;
#X obj 156 145 t f b;
#X obj 156 209 +;
#X obj 183 170 f;
#X obj 183 192 * 10;
#X msg 198 139 0;
#X obj 156 231 t f f;
#X obj 60 248 f;
#X obj 60 122 t b b;
#X obj 60 270 outlet;
#X text 152 17 to be used with [comport] for utilising Arduino's Serial.println()
function;
#X obj 156 116 - 48;
#X text 186 211 this is taken from the code often used in the Arduino:
;
#X text 208 229 while(Serial.available));
#X text 216 244 byte inByte = Serial.read() \;;
#X text 216 257 if((inByte >= '0') && (inByte <= '9'));
#X text 208 295 (curly brackets are not available in Pd's comments)
;
#X text 235 273 int temp = temp * 10 + inByte - '0' \;;
#X text 214 345 written by Alexandros Drymonitis;
#X obj 111 73 moses 48;
#X obj 156 95 moses 58;
#X text 172 72 let only digits through;
#X obj 60 47 sel 10 13;
#X connect 0 0 22 0;
#X connect 1 0 2 0;
#X connect 1 1 3 0;
#X connect 2 0 6 0;
#X connect 3 0 4 0;
#X connect 4 0 2 1;
#X connect 5 0 3 1;
#X connect 6 0 7 1;
#X connect 6 1 3 1;
#X connect 7 0 9 0;
#X connect 8 0 7 0;
#X connect 8 1 5 0;
#X connect 11 0 1 0;
#X connect 19 1 20 0;
#X connect 20 0 11 0;
#X connect 22 0 8 0;
#X connect 22 2 19 0;
#X restore 167 160 pd serial_println;
#X text 285 160 turn Serial.println characters into integers;
#X text 303 230 pack values into a list that starts right after the
;
#X text 303 245 begin packet character;
#X text 397 280 send each value to its own outlet add an 'f' and an
outlet for each value you are sending between begin/end chars;
#X obj 181 282 unpack f f;
#X text 316 104 100 = 'd' : end digital packet;
#X text 315 89 68 = 'D': begin digital packet;
#N canvas 556 208 852 430 parse-start-stop-Dd 0;
#X msg 179 182 0;
#X msg 152 182 1;
#X msg 238 333 1;
#X obj 238 239 counter;
#X obj 176 387 &&;
#X msg 272 333 0;
#X obj 241 191 gate;
#X obj 205 364 f;
#X obj 171 314 t b b;
#X obj 241 270 > 2;
#X obj 241 308 sel 1 0;
#X obj 209 436 gate;
#X obj 209 478 outlet;
#X text 313 116 65 = 'A' is to start listening;
#X obj 227 60 inlet;
#X obj 342 456 outlet;
#X obj 145 276 f;
#X obj 228 121 t f f f f;
#X text 326 473 send bang when new group is starting;
#X text 58 516 by Jiffer Harriman;
#X text 57 530 Creative Commons Open Source;
#X text 313 133 97 = 'a' is to stop;
#X obj 157 155 sel 68 100;
#X connect 0 0 16 0;
#X connect 0 0 6 0;
#X connect 1 0 16 0;
#X connect 1 0 6 0;
#X connect 2 0 7 1;
#X connect 3 0 9 0;
#X connect 4 0 11 0;
#X connect 5 0 7 1;
#X connect 6 0 3 0;
#X connect 7 0 4 1;
#X connect 8 0 4 0;
#X connect 8 1 7 0;
#X connect 9 0 10 0;
#X connect 10 0 2 0;
#X connect 10 1 5 0;
#X connect 11 0 12 0;
#X connect 14 0 17 0;
#X connect 16 0 4 0;
#X connect 17 0 11 1;
#X connect 17 1 8 0;
#X connect 17 2 6 1;
#X connect 17 3 22 0;
#X connect 22 0 1 0;
#X connect 22 0 15 0;
#X connect 22 1 0 0;
#X connect 22 1 3 2;
#X restore 167 93 pd parse-start-stop-Dd;
#X connect 0 0 13 0;
#X connect 3 0 4 0;
#X connect 3 0 10 0;
#X connect 4 0 3 1;
#X connect 5 0 3 0;
#X connect 10 0 1 0;
#X connect 10 1 2 0;
#X connect 13 0 5 0;
#X connect 13 1 3 1;
#X restore 92 178 pd read_digital;
#X obj 317 218 resample 50;
#X obj 357 237 resample 50;
#X obj 396 257 resample 50;
#X floatatom 92 223 5 0 0 0 - - -;
#X floatatom 179 225 5 0 0 0 - - -;
#X obj 92 201 resample 50;
#X obj 179 202 resample 50;
#X obj 93 141 comport 4 57600;
#X floatatom 444 299 5 0 0 0 - - -;
#X obj 443 277 resample 50;
#X floatatom 666 201 5 0 0 0 - - -;
#X floatatom 720 187 5 0 0 0 - - -;
#X floatatom 767 188 5 0 0 0 - - -;
#X floatatom 808 187 5 0 0 0 - - -;
#X floatatom 856 187 5 0 0 0 - - -;
#X floatatom 961 187 5 0 0 0 - - -;
#X floatatom 996 185 5 0 0 0 - - -;
#X floatatom 1033 185 5 0 0 0 - - -;
#X obj 961 49 vsl 15 128 0 255 0 0 empty empty empty 0 -9 0 10 -258113
-1 -1 0 1;
#X obj 995 47 vsl 15 128 0 255 0 0 empty empty empty 0 -9 0 10 -4034
-1 -1 0 1;
#X obj 1031 46 vsl 15 128 0 255 0 0 empty empty empty 0 -9 0 10 -4160
-1 -1 0 1;
#X text 1030 24 blue;
#X text 993 25 green;
#X text 959 24 red;
#X text 315 322 A0;
#X text 360 321 A1;
#X text 399 321 A2;
#X text 443 321 A3;
#X text 92 244 D2;
#X text 178 245 D12;
#X msg 729 139 1;
#X msg 719 160 0;
#X msg 777 139 1;
#X msg 767 160 0;
#X msg 819 139 1;
#X msg 807 162 0;
#X msg 863 138 1;
#X msg 853 159 0;
#X floatatom 1093 260 5 0 0 0 - - -;
#X msg 1105 213 1;
#X msg 1095 234 0;
#X floatatom 899 186 5 0 0 0 - - -;
#X msg 899 141 1;
#X msg 901 161 0;
#X obj 562 269 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X text 584 268 <- start after serial connection is open;
#X text 1079 193 LED D13;
#X obj 844 319 s toArduino;
#X obj 1105 165 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
0 1;
#X obj 1108 112 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
0 1;
#X obj 1106 142 metro 1000;
#X text 718 121 D4;
#X text 771 120 D5;
#X text 811 118 D6;
#X text 859 120 D7;
#X text 900 124 D8;
#X text 662 179 D3;
#X text 194 139 <- baud rate 57600 (Arduino code is 115200 - there
is a bug that forces this apparent mismatch);
#X text 1105 92 BLINK!;
#N canvas 90 203 1006 473 orderAndSendOutputs 0;
#X obj 77 92 inlet;
#X obj 132 92 inlet;
#X obj 190 92 inlet;
#X obj 240 92 inlet;
#X obj 295 92 inlet;
#X obj 353 92 inlet;
#X obj 404 91 inlet;
#X obj 454 91 inlet;
#X obj 509 91 inlet;
#X obj 567 91 inlet;
#X obj 210 290 outlet;
#X obj -79 101 t b b b b b b b b b b;
#X obj 116 132 f;
#X obj 175 134 f;
#X obj 228 134 f;
#X obj 62 131 f;
#X obj 336 135 f;
#X obj 395 137 f;
#X obj 448 137 f;
#X obj 282 134 f;
#X obj 495 138 f;
#X obj 548 138 f;
#X obj -58 53 inlet;
#X obj -60 76 metro 40;
#X connect 0 0 15 1;
#X connect 1 0 12 1;
#X connect 2 0 13 1;
#X connect 3 0 14 1;
#X connect 4 0 19 1;
#X connect 5 0 16 1;
#X connect 6 0 17 1;
#X connect 7 0 18 1;
#X connect 8 0 20 1;
#X connect 9 0 21 1;
#X connect 11 0 21 0;
#X connect 11 1 20 0;
#X connect 11 2 18 0;
#X connect 11 3 17 0;
#X connect 11 4 16 0;
#X connect 11 5 19 0;
#X connect 11 6 14 0;
#X connect 11 7 13 0;
#X connect 11 8 12 0;
#X connect 11 9 15 0;
#X connect 12 0 10 0;
#X connect 13 0 10 0;
#X connect 14 0 10 0;
#X connect 15 0 10 0;
#X connect 16 0 10 0;
#X connect 17 0 10 0;
#X connect 18 0 10 0;
#X connect 19 0 10 0;
#X connect 20 0 10 0;
#X connect 21 0 10 0;
#X connect 22 0 23 0;
#X connect 23 0 11 0;
#X restore 843 283 pd orderAndSendOutputs;
#X obj 714 37 sel 0 1 2 3 4;
#X obj 713 14 counter 4;
#X obj 713 -40 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X floatatom 818 28 5 0 0 0 - - -;
#X obj 716 71 pipe 100;
#X obj 762 94 pipe 100;
#X obj 814 70 pipe 100;
#X obj 853 106 pipe 100;
#X obj 901 89 pipe 100;
#X text 817 9 on time;
#X floatatom 765 -39 5 0 0 0 - - -;
#X text 722 -64 scrolling lights;
#X obj 711 -14 metro 100;
#N canvas 0 22 450 278 (subpatch) 0;
#X array scale 8 float 3;
#A 0 0 3 5 7 9 10 12 15;
#X coords 0 20 8 0 200 140 1 0 0;
#X restore 121 368 graph;
#X obj 358 389 tabread scale;
#X floatatom 359 414 5 0 0 0 - - -;
#X obj 359 443 + 60;
#X obj 355 469 mtof;
#X obj 239 694 dac~;
#X obj 355 502 mm-pwm~;
#X floatatom 589 476 5 0 0 0 - - -;
#X obj 354 586 mm-filter~;
#X obj 479 404 mm-map 0 1023 300 5000;
#X obj 73 555 mm-adsr~;
#X obj 249 667 *~;
#X obj 74 529 change;
#X obj 90 274 change;
#X obj 357 366 mm-automap 0 8;
#X obj 440 346 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X connect 0 0 22 0;
#X connect 1 0 22 0;
#X connect 2 0 22 0;
#X connect 5 0 22 0;
#X connect 11 0 102 0;
#X connect 13 0 15 0;
#X connect 13 1 16 0;
#X connect 13 2 17 0;
#X connect 13 3 24 0;
#X connect 13 3 97 0;
#X connect 14 0 20 0;
#X connect 14 0 101 0;
#X connect 14 1 21 0;
#X connect 14 1 100 0;
#X connect 15 0 10 0;
#X connect 16 0 11 0;
#X connect 17 0 12 0;
#X connect 20 0 18 0;
#X connect 21 0 19 0;
#X connect 22 0 14 0;
#X connect 22 0 13 0;
#X connect 24 0 23 0;
#X connect 25 0 74 1;
#X connect 26 0 74 2;
#X connect 27 0 74 3;
#X connect 28 0 74 4;
#X connect 29 0 74 5;
#X connect 30 0 74 7;
#X connect 31 0 74 8;
#X connect 32 0 74 9;
#X connect 33 0 30 0;
#X connect 34 0 31 0;
#X connect 35 0 32 0;
#X connect 45 0 26 0;
#X connect 46 0 26 0;
#X connect 47 0 27 0;
#X connect 48 0 27 0;
#X connect 49 0 28 0;
#X connect 50 0 28 0;
#X connect 51 0 29 0;
#X connect 52 0 29 0;
#X connect 53 0 74 10;
#X connect 54 0 53 0;
#X connect 55 0 53 0;
#X connect 56 0 74 6;
#X connect 57 0 56 0;
#X connect 58 0 56 0;
#X connect 59 0 74 0;
#X connect 63 0 53 0;
#X connect 64 0 65 0;
#X connect 65 0 63 0;
#X connect 74 0 62 0;
#X connect 75 0 45 0;
#X connect 75 0 79 0;
#X connect 75 1 47 0;
#X connect 75 1 80 0;
#X connect 75 2 49 0;
#X connect 75 2 81 0;
#X connect 75 3 51 0;
#X connect 75 3 82 0;
#X connect 75 4 57 0;
#X connect 75 4 83 0;
#X connect 76 0 75 0;
#X connect 77 0 87 0;
#X connect 78 0 79 1;
#X connect 78 0 80 1;
#X connect 78 0 81 1;
#X connect 78 0 83 1;
#X connect 78 0 82 1;
#X connect 79 0 46 0;
#X connect 80 0 48 0;
#X connect 81 0 50 0;
#X connect 82 0 52 0;
#X connect 83 0 58 0;
#X connect 85 0 87 1;
#X connect 87 0 76 0;
#X connect 89 0 90 0;
#X connect 90 0 91 0;
#X connect 91 0 92 0;
#X connect 92 0 94 0;
#X connect 94 0 96 0;
#X connect 95 0 94 2;
#X connect 96 0 99 1;
#X connect 97 0 96 3;
#X connect 98 0 99 0;
#X connect 99 0 93 0;
#X connect 99 0 93 1;
#X connect 100 0 98 0;
#X connect 101 0 77 0;
#X connect 102 0 89 0;
#X connect 103 0 102 3;
